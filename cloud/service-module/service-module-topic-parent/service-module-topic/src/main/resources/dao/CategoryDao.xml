<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iomc.forum.topic.dao.CategoryDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.iomc.forum.topic.api.entity.Category">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="sort" property="sort"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <update id="sortCategory">
        UPPDATE categories c
        SET c.sort =
            CASE c.id
            <foreach collection="list" item="item" separator=",">
                WHEN #{item.id} THEN #{item.sort}
            </foreach>
            END
        WHERE c.id IN
        <foreach collection="list" item="item" separator=",">
            #{item.id}
        </foreach>

    </update>

    <!-- 分页查询分类 -->
    <select id="selectCategoryPage" resultMap="BaseResultMap">
        SELECT *
        FROM categories
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY sort ASC, id DESC
    </select>

    <!-- 获取热门分类 -->
    <select id="selectHotCategories" resultType="com.iomc.forum.topic.api.vo.CategoryVO">
        SELECT
            c.id,
            c.name,
            c.description,
            COUNT(DISTINCT t.id) as topic_count,
            SUM(t.view_count) as total_views,
            SUM(t.comment_count) as total_comments,
            SUM(t.like_count) as total_likes,
            COUNT(DISTINCT CASE
                               WHEN t.is_featured = 1 THEN t.id
                               ELSE NULL
                END) as featured_count,
            COUNT(DISTINCT CASE
                               WHEN t.created_at >= DATE_SUB(NOW(), INTERVAL 7 DAY) THEN t.id
                               ELSE NULL
                END) as recent_topics
        FROM categories c
                 LEFT JOIN topics t ON c.id = t.category_id
        WHERE c.status = 1
          AND (t.status = 1 OR t.status IS NULL)
        GROUP BY c.id, c.name, c.description
        ORDER BY (
                     topic_count * 0.3 +
                     total_views * 0.2 +
                     total_comments * 0.2 +
                     total_likes * 0.1 +
                     featured_count * 0.1 +
                     recent_topics * 0.1
                     ) DESC
            LIMIT #{limit};
    </select>

</mapper> 